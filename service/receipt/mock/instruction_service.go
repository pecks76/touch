// Code generated by MockGen. DO NOT EDIT.
// Source: instruction_service.go

// Package mock_receipt is a generated GoMock package.
package mock_receipt

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockInstructionService is a mock of InstructionService interface.
type MockInstructionService struct {
	ctrl     *gomock.Controller
	recorder *MockInstructionServiceMockRecorder
}

// MockInstructionServiceMockRecorder is the mock recorder for MockInstructionService.
type MockInstructionServiceMockRecorder struct {
	mock *MockInstructionService
}

// NewMockInstructionService creates a new mock instance.
func NewMockInstructionService(ctrl *gomock.Controller) *MockInstructionService {
	mock := &MockInstructionService{ctrl: ctrl}
	mock.recorder = &MockInstructionServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInstructionService) EXPECT() *MockInstructionServiceMockRecorder {
	return m.recorder
}

// saveInstruction mocks base method.
func (m *MockInstructionService) saveInstruction(depositId int, potName, wrapperType string, amount int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "saveInstruction", depositId, potName, wrapperType, amount)
	ret0, _ := ret[0].(error)
	return ret0
}

// saveInstruction indicates an expected call of saveInstruction.
func (mr *MockInstructionServiceMockRecorder) saveInstruction(depositId, potName, wrapperType, amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "saveInstruction", reflect.TypeOf((*MockInstructionService)(nil).saveInstruction), depositId, potName, wrapperType, amount)
}
