// Code generated by MockGen. DO NOT EDIT.
// Source: account_service.go

// Package mock_account is a generated GoMock package.
package mock_account

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAccountService is a mock of AccountService interface.
type MockAccountService struct {
	ctrl     *gomock.Controller
	recorder *MockAccountServiceMockRecorder
}

// MockAccountServiceMockRecorder is the mock recorder for MockAccountService.
type MockAccountServiceMockRecorder struct {
	mock *MockAccountService
}

// NewMockAccountService creates a new mock instance.
func NewMockAccountService(ctrl *gomock.Controller) *MockAccountService {
	mock := &MockAccountService{ctrl: ctrl}
	mock.recorder = &MockAccountServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountService) EXPECT() *MockAccountServiceMockRecorder {
	return m.recorder
}

// AddToOrCreateAccount mocks base method.
func (m *MockAccountService) AddToOrCreateAccount(id int, wrapperType string, potId, amount int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddToOrCreateAccount", id, wrapperType, potId, amount)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddToOrCreateAccount indicates an expected call of AddToOrCreateAccount.
func (mr *MockAccountServiceMockRecorder) AddToOrCreateAccount(id, wrapperType, potId, amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddToOrCreateAccount", reflect.TypeOf((*MockAccountService)(nil).AddToOrCreateAccount), id, wrapperType, potId, amount)
}
