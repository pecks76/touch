// Code generated by MockGen. DO NOT EDIT.
// Source: deposit_persistence.go

// Package mock_receipt is a generated GoMock package.
package mock_receipt

import (
	reflect "reflect"
	receipt "restservice/domain/receipt"

	gomock "github.com/golang/mock/gomock"
)

// MockDepositRepository is a mock of DepositRepository interface.
type MockDepositRepository struct {
	ctrl     *gomock.Controller
	recorder *MockDepositRepositoryMockRecorder
}

// MockDepositRepositoryMockRecorder is the mock recorder for MockDepositRepository.
type MockDepositRepositoryMockRecorder struct {
	mock *MockDepositRepository
}

// NewMockDepositRepository creates a new mock instance.
func NewMockDepositRepository(ctrl *gomock.Controller) *MockDepositRepository {
	mock := &MockDepositRepository{ctrl: ctrl}
	mock.recorder = &MockDepositRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDepositRepository) EXPECT() *MockDepositRepositoryMockRecorder {
	return m.recorder
}

// InsertDeposit mocks base method.
func (m *MockDepositRepository) InsertDeposit(clientId, nominal int) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertDeposit", clientId, nominal)
	ret0, _ := ret[0].(int)
	return ret0
}

// InsertDeposit indicates an expected call of InsertDeposit.
func (mr *MockDepositRepositoryMockRecorder) InsertDeposit(clientId, nominal interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertDeposit", reflect.TypeOf((*MockDepositRepository)(nil).InsertDeposit), clientId, nominal)
}

// ReadDeposit mocks base method.
func (m *MockDepositRepository) ReadDeposit(id int) receipt.Deposit {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadDeposit", id)
	ret0, _ := ret[0].(receipt.Deposit)
	return ret0
}

// ReadDeposit indicates an expected call of ReadDeposit.
func (mr *MockDepositRepositoryMockRecorder) ReadDeposit(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadDeposit", reflect.TypeOf((*MockDepositRepository)(nil).ReadDeposit), id)
}
